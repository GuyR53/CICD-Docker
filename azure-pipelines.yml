# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2439aa01-ecbd-4f2b-a801-6fc0d1d50cc1'
  imageRepository: 'dockerapp'
  containerRegistry: 'myazurecr1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: StagingPool
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)


   
# Continuous Deployment Process for Staging Environment
- stage: DeployToStaging
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: staging
    displayName: Deploy to Staging
    environment:
      name: Staging
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'MyAzureCR1'
              command: 'login'

          - task: CmdLine@2
            inputs:
              script: |
                docker rm -f $(docker ps -qa)
                docker run -d -p 8080:8080 --name=bootcamp MyAzureCR1.azurecr.io/dockerapp: $(tag)


# Continuous Delivery Process for Production Environment
#- stage: DeployToProduction
 # condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  #jobs:
  #- deployment: production
   # displayName: Deploy to Production
    #pool:
     # name: ProductionPool
   # environment:
    #  name: Production
     # resourceType: VirtualMachine
    #strategy:
     # runOnce:
      #  deploy:
       #   steps:
       #   - <<YOUR TASKS>>